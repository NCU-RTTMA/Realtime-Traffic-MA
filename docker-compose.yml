version: '3'
services:
  mongo:
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    networks:
      - docker-net
    # environment:
      # MONGO_INITDB_ROOT_USERNAME: foo
      # MONGO_INITDB_ROOT_PASSWORD: bar
    volumes:
      - ./database/mongo/data:/data/db
    container_name: mongo


  redis:
    image: 'redis:latest'
    restart: always
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - 6379:6379
    volumes:
      - ./database/redis/data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    container_name: redis
    networks:
      - docker-net


  traffic:
    build:
      context: ./src/
      dockerfile: Dockerfile
    container_name: traffic
    image: traffic
    ports:
      - 5000:5000
    networks:
      - docker-net
    depends_on:
      - redis
      - mongo


  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    networks:
      - docker-net
    environment:
    - REDIS_HOSTS=local:redis:6379
    ports:
    - "8082:8081"


  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    networks:
      - docker-net
    ports:
        - 8081:8081
    depends_on:
        - mongo
    environment:
        ME_CONFIG_MONGODB_SERVER: mongo
        # ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
        # ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
        # ME_CONFIG_MONGODB_ENABLE_ADMIN: true
        # ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_USERNAME} # mongo-express login username and password.
        # ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_PASSWORD}



networks:
  docker-net:
    driver: bridge
